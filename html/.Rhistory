n <- 1000
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
![Caption for the picture.](/path/to/image.png)
![Caption for the picture.](D:/Numerical Methods/source/chapter18_photo.jpg)
knitr::include_graphics("chapter18_photo.jpg")
#![Caption for the picture.](D:/Numerical Methods/source/chapter18_photo.jpg)
knitr::include_graphics("D:/Numerical Methods/source/chapter18_photo.jpg")
curve(dcauchy(x, 5,5), 0, 10)
curve(dcauchy(x, 1,5), 0, 10)
#curve(dcauchy(x, 5,1), 0, 10)
#
op=par(mfrow=c(2,2))
curve(dcauchy(x, 1,1), 0, 10)
curve(dcauchy(x, 1,5), 0, 10)
curve(dcauchy(x, 5,1), 0, 10)
curve(dcauchy(x, 5,5), 0, 10)
curve(dcauchy(x, 1,1), 0, 10)
curve(dcauchy(x, 1,5), 0, 10)
curve(dcauchy(x, 5,1), 0, 10)
curve(dcauchy(x, 5,5), 0, 10)
curve(dcauchy(x, 0,0.3), -3,3)
op=par(mfrow=c(2,2))
curve(dcauchy(x, 1,1), 0, 10)
curve(dcauchy(x, 1,5), 0, 10)
curve(dcauchy(x, 5,1), 0, 10)
curve(dcauchy(x, 5,5), 0, 10)
op=par(mfrow=c(1,2))
curve(dcauchy(x, 1,1), 0, 10)
curve(dcauchy(x, 1,5), 0, 10)
curve(dcauchy(x, 5,1), 0, 10)
curve(dcauchy(x, 5,5), 0, 10)
op=par(mfrow=c(2,2))
curve(dcauchy(x, 1,1), 0, 10)
curve(dcauchy(x, 1,5), 0, 10)
curve(dcauchy(x, 5,1), 0, 10)
curve(dcauchy(x, 5,5), 0, 10)
curve(dcauchy(x), 0, 10)
curve(dcauchy(x, 0, 0), 0, 10)
curve(dcauchy(x, 0, 1), 0, 10)
op=par(mfrow=c(2,2))
curve(dcauchy(x, 1,1), 0, 10)
curve(dcauchy(x, 1,5), 0, 10)
curve(dcauchy(x, 5,1), 0, 10)
curve(dcauchy(x, 5,5), 0, 10)
curve(dcauchy(x, 0, 1), 0, 10)
op=par(mfrow=c(2,2))
curve(dcauchy(x, 1,1), 0, 10)
curve(dcauchy(x, 1,5), 0, 10)
curve(dcauchy(x, 5,1), 0, 10)
curve(dcauchy(x, 5,5), 0, 10)
#curve(dcauchy(x, 0, 1), 0, 10)
return(X)
binom.sim <- function(n, p) {
X <- 0
px <- (1-p)^n
Fx <- px
U <- runif(1)
while (Fx < U) {
X <- X + 1
px <- px*p/(1-p)*(n-X+1)/X
Fx <- Fx + px
}
return(X)
}
# inputs
N <- 10000 # sample size
n <- 10 # rv parameters
p <- 0.7
set.seed(100) # seed for RNG
# generate sample and estimate p
X <- rep(0, N)
for (i in 1:N) X[i] <- binom.sim(n, p)
phat <- rep(0, n+1)
for (i in 0:n) phat[i+1] <- sum(X == i)/N
phat.CI <- 1.96*sqrt(phat*(1-phat)/N)
# plot output
plot(0:n, dbinom(0:n, n, p), type="h", xlab="x", ylab="p(x)")
points(0:n, dbinom(0:n, n, p), pch=19)
points(0:n, phat, pch=3)
points(0:n, phat+phat.CI, pch=3)
points(0:n, phat-phat.CI, pch=3)
x<-seq(-10,10,by=0.1)
plot(x, dnorm(x),type="l")
lines(x, dcauchy(x),col="red")
x<-seq(-3,3,by=0.1)
plot(x, dnorm(x),type="l")
lines(x, dcauchy(x),col="red")
x<-seq(-3,3,by=0.1)
#plot(x, dnorm(x),type="l")
lines(x, dcauchy(x),col="red")
x<-seq(-3,3,by=0.1)
plot(x, dnorm(x),type="l")
lines(x, dcauchy(x),col="red")
x<-seq(-3,3,by=0.1)
plot(x, dnorm(x),type="n")
lines(x, dcauchy(x),col="red")
x[0] <- 2
for(i in 10){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 2
for(i in c(2:10){
x[1] <- 2
for(i in c(2:10)){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 1
for(i in c(2:10)){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 3
for(i in c(2:10)){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 2
for(i in c(2:10)){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
set.seed(10)
x[1] <- runif(1)
for(i in c(2:10)){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
set.seed(42)
x[1] <- runif(2)
for(i in c(2:10)){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 4
for(i in c(2:10)){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 4
for(i in c(2:x[1]*3)){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 4
for(i in c(2:(x[1]*3))){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 4
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 4
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 4
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+2)%%12
print(x[i])
}
x[1] <- 5
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+2)%%12
print(x[i])
}
x[1] <- runif(5)
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
x[1] <- runif(1, 1, 10)
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
set.seed(1)
x[1] <- runif(1)
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
set.seed(1)
x[1] <- runif(1)
print(x[1])
for(i in c(2:10)){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
#a
set.seed(1)
x[1] <- runif(1)
print(x[1])
for(i in c(2:10)){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
set.seed(1)
x[1] <- runif(1)
print(x[1])
for(i in c(2:10)){
x[i] <-(8*x[i-1]+2)%%12
print(x[i])
}
#a
x[1] <- 4
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 4
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
x[1] <- 5
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+2)%%12
print(x[i])
}
x <- c()
x[1] <- sample(11, 1)
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
x <- c()
x[1] <- sample(11, 1)
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
x <- c()
x[1] <- sample(11, 1)
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
x <- c()
x[1] <- sample(11, 1)
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
x <- c()
x[1] <- sample(11, 1)
print(x[1])
for(i in c(2:10)){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
x <- c()
x[1] <- sample(11, 1)
print(x[1])
for(i in c(2:20)){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
x <- c()
x[1] <- sample(11, 1)
print(x[1])
for(i in c(2:20)){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
x <- c()
x[1] <- sample(11, 1)
print(x[1])
for(i in c(2:20)){
x[i] <-(8*x[i-1]+3)%%11
print(x[i])
}
#a
x <- c()
x[1] <- sample(11, 1)
print(x[1])
for(i in c(2:(x[1]*3))){
x[i] <-(9*x[i-1]+3)%%11
print(x[i])
}
F.rand <- function () {
u <- runif(1)
x <- 0
while (F(x) < u) {
x <- x + 1
}
return(x)
}
F.rand(10)
F.rand()
print(F.rand())
